use Sartak::Blog;

BEGIN { print "title: Inferring a Wand of Teleportation\ndraft: 1\n" }

p { q{Lately I've been reading Neal Stephenson's [_Anathem_](http://www.amazon.com/gp/product/B0015DPXKI/ref=as_li_ss_tl?ie=UTF8&tag=sartak-20&linkCode=as2&camp=217145&creative=399373&creativeASIN=B0015DPXKI) and, like all of his other books since at least _Snow Crash_, its entertaining story has weaved throughout it many famously protracted but ticklish technical digressions. One such digression halfway through _Anathem_ (Kindle pages 583-590) held me transfixed, as it was a discussion of a problem about which I have pondered hard but for which I have never been able to produce a working solution.} };

p { q{In the book, there is a dialog which begins with a question so bizarre that it trips up the young philosopher-mathematician to whom it was posed: **"Who are you talking to?"** This question is asked amidst a context of how much experience an alien intelligence must necessarily share with humanity. The conversation then continues through a Socratic dialog about how we could possibly communicate the idea of a "person" to a completely different kind of being. The student comes to understand that one of the key features of consciousness involves constantly generating many hypotheses about reality using sensory input and discarding those which are implausible. Given this ability to "erect and tear down counterfactual universes", it follows that intelligent beings can realize that a particular object doesn't _stop existing_ when it leaves the field of vision, nor does it pop into existence when it comes back into sight. Not only that, but intelligent beings can infer that it remains the _same_ object even though it briefly defied sensation. This concept of continuously-existing objects is named [object permanence](http://en.wikipedia.org/wiki/Object_permanence).} };

p { q{The dialog then draws nearer to my universe of interests by considering that computer systems typically do not realize object permanence. The example provided is that of people watching a radar system tracking several aircraft. The radar doesn't understand that a single blip spanning multiple sweeps is probably a continuously-existing aircraft, even if it is moving at a constant velocity. However, a human has no trouble tracking many aircraft on a radar because she can form a mental model of how each aircraft could be flying. So all the radar understands is discontinuous blips, while the human viewer can grasp at what those blips _mean_, due to inferences made possible by an understanding of physics.} };

p { q{My interest in this topic stems from writing a NetHack bot called [TAEB](http://taeb-blog.sartak.org).} };

p { q{Every turn in the game, the bot would read in the current map and register any changes since the previous turn's map. Due to how NetHack's user interface works, this was a very straightforward and productive way to internalize changes to the game world. Even here, in the most primitive activity of a NetHack bot, you can start to see the encoding of object permanence. If a particular tile on the map doesn't change its glyph this turn, then you can (nearly always) safely assume that it must be the same wall, door, trap, etc. This means that TAEB's memory of such things as the alignment of an altar (which is not a readily apparent property exposed by the map -- the player must take some action to ascertain altar alignment) was an emergent behavior, won for free. TAEB tracked additional tile properties like whether he walked on it (to use paths known to not contain traps). This wouldn't have been possible without this trivial object permanence that TAEB understood. So far so good.} };

p { q{However, this technique of diffing NetHack maps worked well only until the bot matured enough to need to care about objects capable of _motion_. The object permanence we got for free sadly only works for immobile objects like walls. When a monster moves, then TAEB is no better off than that radar. Neither TAEB nor the radar are sophisticated enough to infer that blips on separate sweeps could represent a single, continuously-existing mountain nymph.} };

p { q{This deficiency, though it may seem academic, really expressed itself through a whole host of nasty symptoms. Most damning was _oscillation_ which was when TAEB would shift endlessly between two tiles. This was typically caused by an interesting object being on the edge of the field of vision. When TAEB saw a monster it wanted to kill or an item it wanted to collect, it would step towards that object. Sometimes, due to terrain, stepping closer to an object caused it to leave TAEB's vision, so NetHack did not render it for the next turn. Then, since the object apparently stopped existing(!), TAEB would go do whatever else it wanted to do before that object showed up. This might mean stepping back onto a tile which can see the object again! And so TAEB would oscillate until some other stimulus caused it to shift priorities enough to escape the problem area. Oscillation was particularly acute with sleeping monsters since mobile monsters would eventually provide that escape stimulus themselves.} };

p { q{It's entirely fair to argue that to defend against such oscillatory stupidity, we should have added logic to forbid walking on the same two tiles however many times in a given number of turns. In fact, I wouldn't be surprised if one of the contributors even wrote code to that effect. However, **the lack of object permanence caused many pervasive problems**. Better to put thought towards making the entire system understand object permanence rather than applying an endless stream of band-aids to the problem's symptoms. Especially since such band-aids could give rise to their own problems, such as TAEB refusing to escape across some tiles that once happened to be part of an oscillation.} };

p { q{Realizing object permanence would also enable TAEB to perform more advanced tactics. One of the most obnoxious items a monster can use is a wand of teleportation. Once you rough up a monster to near-death, it can zap a wand of teleportation at itself to blink to a random spot on the map, as a way to escape from the player. Such wands typically come with 4-7 charges, so it can be very frustrating to deal with a teleporty foe. Bots don't feel frustration, so TAEB would dutifully beat up a minotaur until the wand runs out, after nearly killing it six times over. But a human on the other hand, once she realizes the minotaur has a wand of teleportation, would do well to bring out the big guns to obliterate the freaky beast before it gets the chance to teleport a second time. Sure, it might involve using a consumable resource like a paralysis potion, but in the end you kill the monster much faster *and* you get a partially-charged-but-still-immensely-useful wand of teleportation out of it. However, without object permanence, TAEB can't make the same inference that the minotaur he just beat up until it teleported away is actually the same minotaur and still has that teleport wand. Once it can draw that conclusion, it would know to use a stronger, even if limited, offense in order to obtain the wand and to ultimately conserve the other resources needed for six brawls with the same minotaur. And NetHack is absolutely a game where rounding down lots of tiny margins like that will eventually catch up with you.} };

p { q{The TAEB DevTeam was perpetually hampered by a lack of object persistence. One way to encode it would have been to, as Stephenson outlines in his explanation of what consciousness does, generate possible universes and discard the inconsistent ones. Granted, the physical reality of NetHack is far far simpler than ours. Even still, it'd be a lot of subtle work. While NetHack expertise is of course very useful for writing a NetHack bot, a background in artificial intelligence would certainly get you much further.} };

p { q{At least now, having read this passage in [_Anathem_](http://www.amazon.com/gp/product/B0015DPXKI/ref=as_li_ss_tl?ie=UTF8&tag=sartak-20&linkCode=as2&camp=217145&creative=399373&creativeASIN=B0015DPXKI), I can finally take comfort in Neal Stephenson's apparent agreement that object permanence is a subtle and complex beast. } };

